describe('hx-select-oob attribute', function() {
  beforeEach(function() {
    this.server = makeServer()
    clearWorkArea()
  })
  afterEach(function() {
    this.server.restore()
    clearWorkArea()
  })

  it('basic hx-select-oob works', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="#d2"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
  })

  it('multiple hx-select-oobs works', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div><div id='d3'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="#d2, #d3"></div>')
    make('<div id="d2"></div>')
    make('<div id="d3"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')

    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')

    var div3 = byId('d2')
    div3.innerHTML.should.equal('bar')
  })

  it('basic hx-select-oob ignores bad selector', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="#bad"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('')
  })

  it('hx-select-oob works with advanced swap style like strip:false and target:', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div>")
    var div = make('<div id="d0" hx-get="/test" hx-select="#d1" hx-select-oob="#d2:afterend strip:false target:#d0"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
  })

  it('hx-select-oob works with basic targeting selector', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="#d2:outerHTML:#d3"></div>')
    make('<div class="foo" id="d3"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
  })

  it('basic hx-select-oob works with just an id without #', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="d2"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
  })

  it('basic hx-select-oob works with just a non id selector', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><span><div id='d2'>bar</div></span>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="span div"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
  })

  it('hx-select-oob can end with a blank swap style which is ignored', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div class='foo' id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="#d2:"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
    div2.classList.contains('foo').should.equal(true)
  })

  it('basic hx-select-oob works supports non text based selectors', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div class='foo' id='d2'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob=".foo"></div>')
    make('<div id="d2"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
    div2.classList.contains('foo').should.equal(true)
  })

  it('basic hx-select-oob works with CSS escaped id containing "."', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div id='my.div3'>bar</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob="my\\.div3"></div>')
    make('<div id="my.div3"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('my.div3')
    div2.innerHTML.should.equal('bar')
  })

  it('hx-select-oob can select multiple elements with a selector', function() {
    this.server.respondWith('GET', '/test', "<div id='d1'>foo</div><div class='foo' id='d2'>bar</div><div class='foo' id='d3'>baz</div>")
    var div = make('<div hx-get="/test" hx-select="#d1" hx-select-oob=".foo"></div>')
    make('<div id="d2"></div>')
    make('<div id="d3"></div>')
    div.click()
    this.server.respond()
    div.innerHTML.should.equal('<div id="d1">foo</div>')
    var div2 = byId('d2')
    div2.innerHTML.should.equal('bar')
    div2.classList.contains('foo').should.equal(true)
    var div3 = byId('d3')
    div3.innerHTML.should.equal('baz')
    div3.classList.contains('foo').should.equal(true)
  })
})
